{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "description": "Schema for JSON files generated by ROSMenuLister.",
    "$ref": "#/definitions/Menu",
    "definitions": {
        "Menu": {
            "description": "Represents each menu, including the root menu.",
            "type": "object",
            "required": ["name", "submenus", "commands"],
            "properties": {
                "name": {
                    "description": "Name of the command",
                    "type": "string"
                },
                "summary": {
                    "description": "A summary of the menu, as seen in the list of its parent menu. In the root menu, this contains the RouterOS version, as detected from the pre-prompt screen.",
                    "type": "string",
                    "default": ""
                },
                "description": {
                    "description": "Description of the menu, as seen in the help for the menu itself, above the list of submenus and commands.",
                    "type": "string",
                    "default": ""
                },
                "submenus": {
                    "description": "Submenus of this menu.",
                    "type": "array",
                    "minItems": 0,
                    "items": {
                        "$ref": "#/definitions/Menu"
                    }
                },
                "commands": {
                    "description": "Commands in this menu.",
                    "type": "array",
                    "minItems": 0,
                    "items": {
                        "$ref": "#/definitions/Command"
                    }
                }
            }
        },
        "Command": {
            "description": "Represents each command.",
            "type": "object",
            "required": ["name", "arguments"],
            "properties": {
                "name": {
                    "description": "Name of this command.",
                    "type": "string"
                },
                "summary": {
                    "description": "A summary of the command, as seen in the help for the menu this command belongs to.",
                    "type": "string",
                    "default": ""
                },
                "description": {
                    "description": "Description of the command, as seen in the help for the command itself, above the list of arguments.",
                    "type": "string",
                    "default": ""
                },
                "arguments": {
                    "description": "Arguments that this command may take.",
                    "type": "array",
                    "minItems": 0,
                    "items": {
                        "$ref": "#/definitions/Argument"
                    }
                }
            }
        },
        "Argument": {
            "description": "Represents each command argument.",
            "type": "object",
            "required": ["name"],
            "properties": {
                "name": {
                    "description": "Name of the argument",
                    "type": "string"
                },
                "summary": {
                    "description": "Summary of the argument, as seen in the help for the command this argument belongs to.",
                    "type": "string",
                    "default": ""
                },
                "description": {
                    "description": "Description of the argument, as seen in the help for the argument itself, above the list of values.",
                    "type": "string",
                    "default": ""
                },
                "unnamed": {
                    "description": "Specifies whether this argument's name can be omitted when using it from the command line.",
                    "type": "boolean",
                    "default": false
                },
                "special": {
                    "description": "Specifies whether this argument is not a normal name=value pair argument. This includes empty arguments, for which there won't be a \"values\" property, as well as keywords like \"where\", for which the \"values\" property will describe the possible starting tokens.",
                    "type": "boolean",
                    "default": false
                },
                "values": {
                    "$ref": "#/definitions/ArgumentValues"
                }
            }
        },
        "ArgumentValues": {
            "description": "Parsed description of argument values.",
            "type": "object",
            "properties": {
                "raw": {
                    "description": "Raw unparsed text from console's help, describing the possible values for the argument, or if the argument is a keyword (e.g. \"where\"), describes the first possible token.",
                    "type": "string",
                    "default": ""
                },
                "scriptConstruct": {
                    "description": "Whether the argument's value affects overall scripting. This value might be a name of a variable to be introduced somewhere (e.g. the counter in \"for\" or the \"name\" of \":local\"), or the value might be an actual script to be executed at a point (e.g. most \"do\" arguments)",
                    "type": "boolean",
                    "default": false
                },
                "negatable": {
                    "description": "Whether the argument's value can be prefixed with \"!\" to indicate negation.",
                    "type": "boolean",
                    "default": false
                },
                "type": {
                    "description": "The RouterOS scripting type of this value, if detected.",
                    "type": "array",
                    "items": {
                        "enum": ["(code)", "str", "bool", "num", "time", "ip", "ip-prefix", "ip6", "ip6-prefix"]
                    },
                    "uniqueItems": true
                },
                "enums": {
                    "description": "The possible values for this argument, if detected.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true
                }
            }
        }
    }
}
